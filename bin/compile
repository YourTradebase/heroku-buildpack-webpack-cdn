#!/usr/bin/env bash
build_dir=$1
env_dir=$3

echo "-----> Updating webpack manifest.json from S3"

indent () {
  sed -u 's/^/       /'
}

get_env () {
  local name=$1

  cat "$env_dir/$name"
}

require_env () {
  local missing=0

  for name in "$@"; do
    if [[ -z $(get_env "$name") ]]; then
      echo "${name} is not set." | indent
      (( missing++ ))
    fi
  done

  if [[ missing -gt 0 ]]; then
    echo "${missing} required variable(s) were not set, aborting!" | indent
    exit 1
  fi
}

download_file() {
  local url=$1
  local file=$2


  curl --silent --fail-with-body -o "$file" "$url"

  local status=$?

  if [[ status -eq 0 ]]; then
    echo "Downloaded remote $url to $file." | indent
  else
    echo "Failed to download $url to $file!" | indent
  fi

  return $status
}

require_env "WEBPACK_PUBLIC_OUTPUT_PATH" "WEBPACK_PUBLIC_ROOT_PATH" "WEBPACK_PUBLIC_S3_HOST"

webpack_public_output_path=$(get_env "WEBPACK_PUBLIC_OUTPUT_PATH") # packs
webpack_public_root_path=$(get_env "WEBPACK_PUBLIC_ROOT_PATH") # public
webpack_public_s3_host=$(get_env "WEBPACK_PUBLIC_S3_HOST") # A public s3 endpoint (not the cloudfront host)

local_manifest_path=$build_dir/$webpack_public_root_path/$webpack_public_output_path

remote_manifest_versioned_url=$webpack_public_s3_host/$webpack_public_output_path/manifest-$SOURCE_VERSION.json
remote_manifest_latest_url=$webpack_public_s3_host/$webpack_public_output_path/manifest.json

if [[ ! -d "$local_manifest_path" ]]; then
  echo "Creating manifest directory.." | indent
  mkdir -vp "$local_manifest_path" | indent
fi

download_file "$remote_manifest_versioned_url" "$local_manifest_path/manifest.json" || \
  download_file "$remote_manifest_latest_url" "$local_manifest_path/manifest.json" || \
  exit 1
